{"version":3,"sources":["button.js","Card.js","index.js"],"names":["Button","props","onClick","fnct","symbol","Card","bgColors","state","count","bgColor","countModifier","adder","bgChanger","subtractor","resetter","console","log","randomColor","index","Math","floor","random","prevColor","newColor","setState","c","style","backgroundColor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAUeA,MARf,SAAgBC,GAKd,OAAO,wBAAQC,QAJf,WACED,EAAME,KAAKF,EAAMG,SAGZ,SAAgCH,EAAMG,UC4EhCC,G,MA/Ef,4MACEC,SAAW,CAAC,UAAW,UAAW,UAAW,UAAW,WAD1D,EAGEC,MAAQ,CACNC,MAAO,EACPC,QAAS,WALb,EAQEC,cAAgB,SAACN,GACf,OAAQA,GACN,IAAK,IACH,EAAKO,QACL,EAAKC,YACL,MACF,IAAK,IACH,EAAKC,aACL,EAAKD,YACL,MACF,IAAK,QACH,EAAKE,WACL,EAAKF,YACL,MACF,QACEG,QAAQC,IAAI,aAvBpB,EA4BEC,YAAc,WACZ,IAAIC,EAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC5B,OAAO,EAAKf,SAASY,IA9BzB,EAiCEN,UAAY,WAGV,IAFA,IAAIU,EAAY,EAAKf,MAAME,QACvBc,EAAWD,EACRC,IAAaD,GAClBC,EAAW,EAAKN,cAGlB,EAAKO,SAAS,CACZf,QAASc,KAzCf,EA6CEZ,MAAQ,WACN,IAAIc,EAAI,EAAKlB,MAAMC,MACnBiB,IACA,EAAKD,SAAS,CACZhB,MAAOiB,KAjDb,EAqDEZ,WAAa,WACX,IAAIY,EAAI,EAAKlB,MAAMC,MACnBiB,IACA,EAAKD,SAAS,CACZhB,MAAOiB,KAzDb,EA6DEX,SAAW,WACT,EAAKU,SAAS,CACZhB,MAAO,KA/Db,uDAoEI,OACE,uBAAMkB,MAAO,CAAEC,gBAAiBC,KAAKrB,MAAME,SAA3C,UACE,6BAAKmB,KAAKrB,MAAMC,QAChB,cAAC,EAAD,CAAQJ,OAAQ,IAAKD,KAAMyB,KAAKlB,gBAChC,cAAC,EAAD,CAAQN,OAAQ,QAASD,KAAMyB,KAAKlB,gBACpC,cAAC,EAAD,CAAQN,OAAQ,IAAKD,KAAMyB,KAAKlB,uBAzExC,GAA0BmB,cCA1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1510c57.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Button(props) {\r\n  function clickHandler() {\r\n    props.fnct(props.symbol);\r\n  }\r\n\r\n  return <button onClick={clickHandler}>{props.symbol}</button>;\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport Button from './button';\nimport './card.css';\n\nexport class Card extends Component {\n  bgColors = ['#E8F5FF', '#DFDAE3', '#E5F9EC', '#F6CFD4', '#FCFAD3'];\n\n  state = {\n    count: 0,\n    bgColor: '#E8F5FF',\n  };\n\n  countModifier = (symbol) => {\n    switch (symbol) {\n      case '+':\n        this.adder();\n        this.bgChanger();\n        break;\n      case '-':\n        this.subtractor();\n        this.bgChanger();\n        break;\n      case 'reset':\n        this.resetter();\n        this.bgChanger();\n        break;\n      default:\n        console.log('default');\n        break;\n    }\n  };\n\n  randomColor = () => {\n    let index = Math.floor(Math.random() * 5);\n    return this.bgColors[index];\n  };\n\n  bgChanger = () => {\n    let prevColor = this.state.bgColor;\n    let newColor = prevColor;\n    while (newColor === prevColor) {\n      newColor = this.randomColor();\n    }\n\n    this.setState({\n      bgColor: newColor,\n    });\n  };\n\n  adder = () => {\n    let c = this.state.count;\n    c++;\n    this.setState({\n      count: c,\n    });\n  };\n\n  subtractor = () => {\n    let c = this.state.count;\n    c--;\n    this.setState({\n      count: c,\n    });\n  };\n\n  resetter = () => {\n    this.setState({\n      count: 0,\n    });\n  };\n\n  render() {\n    return (\n      <main style={{ backgroundColor: this.state.bgColor }}>\n        <h1>{this.state.count}</h1>\n        <Button symbol={'+'} fnct={this.countModifier} />\n        <Button symbol={'reset'} fnct={this.countModifier} />\n        <Button symbol={'-'} fnct={this.countModifier} />\n      </main>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from './Card';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}